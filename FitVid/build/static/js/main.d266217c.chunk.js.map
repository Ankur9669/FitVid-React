{"version":3,"sources":["Components/Footer/Footer.js","Components/Buttons/PrimaryButton.js","Components/NavBar/Navbar.js","Components/SideBar/SideBar.js","Pages/HomePage/HeroSection.js","Pages/HomePage/Homepage.js","Pages/HomePage/VideoListing/VideoListing.js","App.js","backend/utils/authUtils.js","backend/controllers/AuthController.js","backend/controllers/HistoryController.js","backend/controllers/VideoController.js","backend/db/videos.js","backend/db/categories.js","backend/controllers/CategoryController.js","backend/controllers/LikeController.js","backend/controllers/PlaylistController.js","backend/db/users.js","backend/controllers/WatchLaterController.js","server.js","index.js"],"names":["Footer","className","PrimaryButton","buttonText","onClick","iconLeft","iconRight","Navbar","type","placeholder","SideBar","HeroSection","src","alt","to","Homepage","VideoListing","App","path","element","index","requiresAuth","request","encodedToken","requestHeaders","authorization","decodedToken","jwt_decode","process","REACT_APP_JWT_SECRET","this","db","users","findBy","email","Response","errors","formatDate","dayjs","format","sign","require","signupHandler","schema","JSON","parse","requestBody","password","rest","_id","uuid","newUser","createdAt","updatedAt","likes","history","playlists","watchlater","createdUser","create","error","loginHandler","foundUser","undefined","getHistoryVideosHandler","user","call","addVideoToHistoryHandler","video","some","item","id","push","removeVideoFromHistoryHandler","videoId","params","filteredHistory","filter","update","clearHistoryHandler","getAllVideosHandler","videos","getVideoHandler","attrs","title","description","creator","categories","categoryName","getAllCategoriesHandler","getCategoryHandler","categoryId","category","getLikedVideosHandler","addItemToLikedVideos","removeItemFromLikedVideos","filteredLikes","getAllPlaylistsHandler","addNewPlaylistHandler","playlist","removePlaylistHandler","playlistId","filteredPlaylists","getVideosFromPlaylistHandler","find","addVideoToPlaylistHandler","removeVideoFromPlaylistHandler","filteredVideos","firstName","lastName","getWatchLaterVideosHandler","addItemToWatchLaterVideos","removeItemFromWatchLaterVideos","environment","Server","serializers","application","RestSerializer","models","Model","like","seeds","server","logging","forEach","routes","namespace","post","bind","get","delete","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d266217c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  AiFillHome,\r\n  AiFillLike,\r\n  AiOutlineHistory,\r\n  AiOutlineSearch,\r\n  MdOutlineExplore,\r\n} from \"../../Assets/icons\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-items\">\r\n        <div className=\"footer-item footer-item-active\">\r\n          <AiFillHome className=\"footer-item-icon \" />\r\n          <p className=\"font-small footer-item-text\">Home</p>\r\n        </div>\r\n\r\n        <div className=\"footer-item \">\r\n          <MdOutlineExplore className=\"footer-item-icon \" />\r\n          <p className=\"font-small footer-item-text\">Explore</p>\r\n        </div>\r\n\r\n        <div className=\"footer-item \">\r\n          <AiFillLike className=\"footer-item-icon \" />\r\n          <p className=\"font-small footer-item-text\">Like</p>\r\n        </div>\r\n\r\n        <div className=\"footer-item\">\r\n          <AiOutlineSearch className=\"footer-item-icon \" />\r\n          <p className=\"font-small footer-item-text\">Search</p>\r\n        </div>\r\n\r\n        <div className=\"footer-item\">\r\n          <AiOutlineHistory className=\"footer-item-icon \" />\r\n          <p className=\"font-small footer-item-text\">History</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./button.css\";\r\n\r\n// Here onClick prop is a function which defines what to do on a button click\r\n// If onCLick is not passed it takes a function which does nothing\r\nconst PrimaryButton = ({\r\n  buttonText = \"\",\r\n  onClick = () => {},\r\n  iconLeft = \"\",\r\n  iconRight = \"\",\r\n  className = \"\",\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`button button-primary flex-center-horizontal-vertical ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      {iconLeft !== \"\" ? iconLeft : <></>}\r\n      {buttonText}\r\n      {iconRight !== \"\" ? iconRight : <></>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport PrimaryButton from \"../Buttons/PrimaryButton\";\r\nimport SecondaryButton from \"../Buttons/SecondaryButton\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"logo-container\">\r\n        <p className=\"logo\">\r\n          Fit<p className=\"logo-sub-text\">Vid</p>\r\n        </p>\r\n      </div>\r\n      <div className=\"searchbar-container\">\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"search\"\r\n            className=\"input simple-input navbar-search\"\r\n            placeholder=\"Search Videos\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"btn-container-navbar\">\r\n        <PrimaryButton buttonText=\"Login\" />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport {\r\n  AiFillHome,\r\n  AiFillLike,\r\n  AiOutlineHistory,\r\n  AiOutlineSearch,\r\n  MdOutlineExplore,\r\n  RiPlayListAddFill,\r\n} from \"../../Assets/icons\";\r\nconst SideBar = () => {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div className=\"sidebar-items\">\r\n        <p className=\"sidebar-item sidebar-item-active\">\r\n          <AiFillHome className=\"sidebar-icon\" />\r\n          Home\r\n        </p>\r\n        <p className=\"sidebar-item\">\r\n          <MdOutlineExplore className=\"sidebar-icon\" />\r\n          Explore\r\n        </p>\r\n        <p className=\"sidebar-item\">\r\n          <AiFillLike className=\"sidebar-icon\" />\r\n          Like\r\n        </p>\r\n        <p className=\"sidebar-item\">\r\n          <RiPlayListAddFill className=\"sidebar-icon\" />\r\n          PlayLists\r\n        </p>\r\n        <p className=\"sidebar-item\">\r\n          <AiOutlineHistory className=\"sidebar-icon\" />\r\n          History\r\n        </p>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport PrimaryButton from \"../../Components/Buttons/PrimaryButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./herosection.css\";\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div className=\"hero-section\">\r\n      <div className=\"hero-image-container\">\r\n        <img\r\n          src=\"images/fitvid-hero-1.jpg\"\r\n          alt=\"hero-image\"\r\n          className=\"img-responsive hero-image\"\r\n        />\r\n      </div>\r\n      <div className=\"hero-text-overlay-container\">\r\n        <p className=\"hero-heading\">\r\n          The World Of <p className=\"inline hero-heading-sub-text\">FITNESS</p>\r\n        </p>\r\n        <Link to=\"/videos\">\r\n          <PrimaryButton buttonText=\"Explore Now\" className=\"hero-button\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React from \"react\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Navbar from \"../../Components/NavBar/Navbar\";\r\nimport SideBar from \"../../Components/SideBar/SideBar\";\r\nimport HeroSection from \"./HeroSection\";\r\nimport \"./homepage.css\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"content-section\">\r\n        <SideBar />\r\n        <div className=\"content\">\r\n          <HeroSection />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Navbar from \"../../../Components/NavBar/Navbar\";\r\nimport SideBar from \"../../../Components/SideBar/SideBar\";\r\nimport HeroSection from \"../HeroSection\";\r\n\r\nconst VideoListing = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"content-section\">\r\n        <SideBar />\r\n        <div className=\"content\">\r\n          <HeroSection />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoListing;\r\n","import \"./App.css\";\r\n\r\nimport Homepage from \"./Pages/HomePage/Homepage\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport VideoListing from \"./Pages/HomePage/VideoListing/VideoListing\";\r\nimport Navbar from \"./Components/NavBar/Navbar\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Homepage />} index></Route>\r\n        <Route path=\"videos\" element={<VideoListing />}></Route>\r\n      </Routes>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Response } from \"miragejs\";\nimport dayjs from \"dayjs\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const requiresAuth = function (request) {\n  const encodedToken = request.requestHeaders.authorization;\n  const decodedToken = jwt_decode(\n    encodedToken,\n    process.env.REACT_APP_JWT_SECRET\n  );\n  if (decodedToken) {\n    const user = this.db.users.findBy({ email: decodedToken.email });\n    return user;\n  }\n  return new Response(\n    401,\n    {},\n    { errors: [\"The token is invalid. Unauthorized access error.\"] }\n  );\n};\n\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");\n","import { v4 as uuid } from \"uuid\";\nimport { Response } from \"miragejs\";\nimport { formatDate } from \"../utils/authUtils\";\nconst sign = require(\"jwt-encode\");\n/**\n * All the routes related to Auth are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles user signups.\n * send POST Request at /api/auth/signup\n * body contains {firstName, lastName, email, password}\n * */\n\nexport const signupHandler = function (schema, request) {\n  const { email, password, ...rest } = JSON.parse(request.requestBody);\n  try {\n    // check if email already exists\n    const foundUser = schema.users.findBy({ email });\n    if (foundUser) {\n      return new Response(\n        422,\n        {},\n        {\n          errors: [\"Unprocessable Entity. Email Already Exists.\"],\n        }\n      );\n    }\n    const _id = uuid();\n    const newUser = {\n      _id,\n      email,\n      password,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n      ...rest,\n      likes: [],\n      history: [],\n      playlists: [],\n      watchlater: [],\n    };\n    const createdUser = schema.users.create(newUser);\n    const encodedToken = sign({ _id, email }, process.env.REACT_APP_JWT_SECRET);\n    return new Response(201, {}, { createdUser, encodedToken });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles user login.\n * send POST Request at /api/auth/login\n * body contains {email, password}\n * */\n\nexport const loginHandler = function (schema, request) {\n  const { email, password } = JSON.parse(request.requestBody);\n  try {\n    const foundUser = schema.users.findBy({ email });\n    if (!foundUser) {\n      return new Response(\n        404,\n        {},\n        { errors: [\"The email you entered is not Registered. Not Found error\"] }\n      );\n    }\n    if (password === foundUser.password) {\n      const encodedToken = sign(\n        { _id: foundUser._id, email },\n        process.env.REACT_APP_JWT_SECRET\n      );\n      foundUser.password = undefined;\n      return new Response(200, {}, { foundUser, encodedToken });\n    }\n    return new Response(\n      401,\n      {},\n      {\n        errors: [\n          \"The credentials you entered are invalid. Unauthorized access error.\",\n        ],\n      }\n    );\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\nimport { requiresAuth } from \"../utils/authUtils\";\n\n/**\n * All the routes related to User History are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting videos from user's history.\n * send GET Request at /api/user/history\n * */\nexport const getHistoryVideosHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    return new Response(200, {}, { history: user.history });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles adding videos to user's history.\n * send POST Request at /api/user/history\n * body contains {video}\n * */\n\nexport const addVideoToHistoryHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const { video } = JSON.parse(request.requestBody);\n    if (user.history.some((item) => item.id === video.id)) {\n      return new Response(\n        409,\n        {},\n        {\n          errors: [\"The video is already in your history\"],\n        }\n      );\n    }\n    user.history.push(video);\n    return new Response(201, {}, { history: user.history });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles removing videos from user's history.\n * send DELETE Request at /api/user/history/:videoId\n * */\n\nexport const removeVideoFromHistoryHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const videoId = request.params.videoId;\n    const filteredHistory = user.history.filter((item) => item._id !== videoId);\n    this.db.users.update({ history: filteredHistory });\n    return new Response(200, {}, { history: filteredHistory });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles removing videos from user's history.\n * send DELETE Request at /api/user/history/all\n * */\n\nexport const clearHistoryHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    this.db.users.update({ history: [] });\n    return new Response(200, {}, { history: [] });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Videos are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/videos\n * */\n\nexport const getAllVideosHandler = function () {\n  try {\n    return new Response(200, {}, { videos: this.db.videos });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles uploads a new video to the db.\n * send POST Request at /api/user/videos/\n * */\n\n// TODO: postVideoHandler\n\n/**\n * This handler handles gets all videos in the db.\n * send GET Request at /api/user/videos/:videoId\n * */\n\nexport const getVideoHandler = function (schema, request) {\n  const { videoId } = request.params;\n  try {\n    const video = schema.videos.findBy({ _id: videoId }).attrs;\n    return new Response(200, {}, { video });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","/**\r\n * Videos Database can be added here.\r\n * You can add videos of your wish with different attributes\r\n * */\r\n\r\nexport const videos = [\r\n  {\r\n    _id: \"Wo5dMEP_BbI\",\r\n    title: \"Awesome Video about Coding\",\r\n    description:\r\n      \"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.\",\r\n    creator: \"Soham Shah\",\r\n  },\r\n  {\r\n    _id: \"F_Riqjdh2oM\",\r\n    title: \"Neural Networks from Scratch - P.1 Intro and Neuron Code\",\r\n    creator: \"Sentdex\",\r\n    description:\r\n      \"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.\",\r\n  },\r\n];\r\n","import { v4 as uuid } from \"uuid\";\n\n/**\n * Category Database can be added here.\n * You can add category of your wish with different attributes\n * */\n\nexport const categories = [\n  {\n    _id: uuid(),\n    categoryName: \"Computer Programming\",\n    description:\n      \"Computer programming is the process of designing and building an executable computer program to accomplish a specific computing\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Frontend Development\",\n    description:\n      \"Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Backend Development\",\n    description:\n      \"Backend Development is also known as server-side development. It is everything that the users don't see and contains behind-the-scenes activities that occur when performing any action on a website.\",\n  },\n];\n","import { Response } from \"miragejs\";\n/**\n * All the routes related to Category are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all categories in the db.\n * send GET Request at /api/categories\n * */\n\nexport const getAllCategoriesHandler = function () {\n  try {\n    return new Response(200, {}, { categories: this.db.categories });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles gets all categories in the db.\n * send GET Request at /api/user/category/:categoryId\n * */\n\nexport const getCategoryHandler = function (schema, request) {\n  const { categoryId } = request.params;\n  try {\n    const category = schema.categories.findBy({ _id: categoryId }).attrs;\n    return new Response(200, {}, { category });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\nimport { requiresAuth } from \"../utils/authUtils\";\n\n/**\n * All the routes related to Liked Videos are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting videos from user's likes.\n * send GET Request at /api/user/likes\n * */\nexport const getLikedVideosHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    return new Response(200, {}, { likes: user.likes });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles adding videos to user's likes.\n * send POST Request at /api/user/likes\n * body contains {video}\n * */\n\nexport const addItemToLikedVideos = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const { video } = JSON.parse(request.requestBody);\n    if (user.likes.some((item) => item.id === video.id)) {\n      return new Response(\n        409,\n        {},\n        {\n          errors: [\"The video is already in your liked videos\"],\n        }\n      );\n    }\n    user.likes.push(video);\n    return new Response(201, {}, { likes: user.likes });\n  }\n  return new Response(\n    404,\n    {},\n    {\n      errors: [\"The email you entered is not Registered. Not Found error\"],\n    }\n  );\n};\n\n/**\n * This handler handles removing videos from user's likes.\n * send DELETE Request at /api/user/likes/:videoId\n * */\n\nexport const removeItemFromLikedVideos = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const videoId = request.params.videoId;\n    const filteredLikes = user.likes.filter((item) => item._id !== videoId);\n    this.db.users.update({ likes: filteredLikes });\n    return new Response(200, {}, { likes: filteredLikes });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n","import { Response } from \"miragejs\";\nimport { requiresAuth } from \"../utils/authUtils\";\nimport { v4 as uuid } from \"uuid\";\n\n/**\n * All the routes related to User Playlists are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting all user's playlists.\n * send GET Request at /api/user/playlist\n * */\nexport const getAllPlaylistsHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    return new Response(200, {}, { playlists: user.playlists });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles adding playlist to user's playlists.\n * send POST Request at /api/user/playlists\n * body contains {playlist: {title: \"foo\", description:\"bar bar bar\" }}\n * */\n\nexport const addNewPlaylistHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const { playlist } = JSON.parse(request.requestBody);\n    user.playlists.push({ ...playlist, videos: [], _id: uuid() });\n    return new Response(201, {}, { playlists: user.playlists });\n  }\n  return new Response(\n    404,\n    {},\n    {\n      errors: [\"The email you entered is not Registered. Not Found error\"],\n    }\n  );\n};\n\n/**\n * This handler handles removing videos from user's playlists.\n * send DELETE Request at /api/user/playlists/:playlistId\n * */\n\nexport const removePlaylistHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const playlistId = request.params.playlistId;\n    const filteredPlaylists = user.playlists.filter(\n      (item) => item._id !== playlistId\n    );\n    this.db.users.update({ playlists: filteredPlaylists });\n    return new Response(200, {}, { playlists: filteredPlaylists });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n\n/**\n * This handler handles getting videos from user's playlist.\n * send GET Request at /api/user/playlists/:playlistId\n * */\n\nexport const getVideosFromPlaylistHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const playlistId = request.params.playlistId;\n    const playlist = user.playlists.find((item) => item._id !== playlistId);\n    return new Response(200, {}, { playlist });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n\n/**\n * This handler handles adding videos from user's playlist.\n * send POST Request at /api/user/playlists/:playlistId\n * body contains {video}\n * */\n\nexport const addVideoToPlaylistHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const playlistId = request.params.playlistId;\n    const { video } = JSON.parse(request.requestBody);\n    const playlist = user.playlists.find((item) => item._id === playlistId);\n    if (playlist.videos.some((item) => item.id === video.id)) {\n      return new Response(\n        409,\n        {},\n        {\n          errors: [\"The video is already in your playlist\"],\n        }\n      );\n    }\n    playlist.videos.push(video);\n    return new Response(201, {}, { playlist });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n\n/**\n * This handler handles removing videos from user's playlist.\n * send DELETE Request at /api/user/playlists/:playlistId/:videoId\n * */\n\nexport const removeVideoFromPlaylistHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const playlistId = request.params.playlistId;\n    const videoId = request.params.videoId;\n    let playlist = user.playlists.find((item) => item._id === playlistId);\n    const filteredVideos = playlist.videos.filter(\n      (item) => item._id !== videoId\n    );\n    playlist.videos = filteredVideos;\n    return new Response(200, {}, { playlist });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n","import { v4 as uuid } from \"uuid\";\nimport { formatDate } from \"../utils/authUtils\";\n/**\n * User Database can be added here.\n * You can add default users of your wish with different attributes\n * Every user will have likes (Likes are set to 0 by default), History Array, Playlists Array (added Watch Later Playlist in it by default) by default\n * */\n\nexport const users = [\n  {\n    _id: uuid(),\n    firstName: \"Adarsh\",\n    lastName: \"Balika\",\n    email: \"adarshbalika@gmail.com\",\n    password: \"adarshBalika123\",\n    createdAt: formatDate(),\n    updatedAt: formatDate(),\n  },\n];\n","import { Response } from \"miragejs\";\nimport { requiresAuth } from \"../utils/authUtils\";\n\n/**\n * All the routes related to Watch Later Videos are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting videos from user's watchlater playlist.\n * send GET Request at /api/user/watchlater\n * */\n\nexport const getWatchLaterVideosHandler = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  try {\n    if (!user) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    return new Response(200, {}, { watchlater: user.watchlater });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles adding videos to user's watchlater playlist.\n * send POST Request at /api/user/watchlater\n * body contains {video}\n * */\n\nexport const addItemToWatchLaterVideos = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const { video } = JSON.parse(request.requestBody);\n    if (user.watchlater.some((item) => item.id === video.id)) {\n      return new Response(\n        409,\n        {},\n        {\n          errors: [\"The video is already in your watch later videos\"],\n        }\n      );\n    }\n    user.watchlater.push(video);\n    return new Response(201, {}, { watchlater: user.watchlater });\n  }\n  return new Response(\n    404,\n    {},\n    {\n      errors: [\"The email you entered is not Registered. Not Found error\"],\n    }\n  );\n};\n\n/**\n * This handler handles removing videos from user's watchlater playlist.\n * send DELETE Request at /api/user/watchlater/:videoId\n * */\n\nexport const removeItemFromWatchLaterVideos = function (schema, request) {\n  const user = requiresAuth.call(this, request);\n  if (user) {\n    const videoId = request.params.videoId;\n    const filteredVideos = user.watchlater.filter(\n      (item) => item._id !== videoId\n    );\n    this.db.users.update({ watchlater: filteredVideos });\n    return new Response(200, {}, { watchlater: filteredVideos });\n  }\n  return new Response(\n    404,\n    {},\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\n  );\n};\n","import { Server, Model, RestSerializer } from \"miragejs\";\nimport {\n  loginHandler,\n  signupHandler,\n} from \"./backend/controllers/AuthController\";\nimport {\n  getHistoryVideosHandler,\n  addVideoToHistoryHandler,\n  removeVideoFromHistoryHandler,\n  clearHistoryHandler,\n} from \"./backend/controllers/HistoryController\";\nimport {\n  getAllVideosHandler,\n  getVideoHandler,\n} from \"./backend/controllers/VideoController\";\nimport { videos } from \"./backend/db/videos\";\nimport { categories } from \"./backend/db/categories\";\nimport {\n  getAllCategoriesHandler,\n  getCategoryHandler,\n} from \"./backend/controllers/CategoryController\";\nimport {\n  getLikedVideosHandler,\n  addItemToLikedVideos,\n  removeItemFromLikedVideos,\n} from \"./backend/controllers/LikeController\";\nimport {\n  getAllPlaylistsHandler,\n  addNewPlaylistHandler,\n  removePlaylistHandler,\n  getVideosFromPlaylistHandler,\n  addVideoToPlaylistHandler,\n  removeVideoFromPlaylistHandler,\n} from \"./backend/controllers/PlaylistController\";\nimport { users } from \"./backend/db/users\";\nimport {\n  addItemToWatchLaterVideos,\n  getWatchLaterVideosHandler,\n  removeItemFromWatchLaterVideos,\n} from \"./backend/controllers/WatchLaterController\";\nexport function makeServer({ environment = \"development\" } = {}) {\n  return new Server({\n    serializers: {\n      application: RestSerializer,\n    },\n    environment,\n    // TODO: Use Relationships to have named relational Data\n    models: {\n      video: Model,\n      category: Model,\n      user: Model,\n      like: Model,\n      history: Model,\n      playlist: Model,\n      watchlater: Model,\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      server.logging = false;\n      videos.forEach((item) => {\n        server.create(\"video\", { ...item });\n      });\n      categories.forEach((item) => server.create(\"category\", { ...item }));\n      users.forEach((item) =>\n        server.create(\"user\", {\n          ...item,\n          likes: [],\n          watchlater: [],\n          history: [],\n          playlists: [],\n        })\n      );\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // video routes (public)\n      this.get(\"/videos\", getAllVideosHandler.bind(this));\n      this.get(\"video/:videoId\", getVideoHandler.bind(this));\n\n      // TODO: POST VIDEO TO DB\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // likes routes (private)\n      this.get(\"/user/likes\", getLikedVideosHandler.bind(this));\n      this.post(\"/user/likes\", addItemToLikedVideos.bind(this));\n      this.delete(\"/user/likes/:videoId\", removeItemFromLikedVideos.bind(this));\n\n      // watch later routes (private)\n      this.get(\"/user/watchlater\", getWatchLaterVideosHandler.bind(this));\n      this.post(\"/user/watchlater\", addItemToWatchLaterVideos.bind(this));\n      this.delete(\n        \"/user/watchlater/:videoId\",\n        removeItemFromWatchLaterVideos.bind(this)\n      );\n\n      // playlist routes (private)\n      this.get(\"/user/playlists\", getAllPlaylistsHandler.bind(this));\n      this.post(\"/user/playlists\", addNewPlaylistHandler.bind(this));\n      this.delete(\n        \"/user/playlists/:playlistId\",\n        removePlaylistHandler.bind(this)\n      );\n\n      this.get(\n        \"/user/playlists/:playlistId\",\n        getVideosFromPlaylistHandler.bind(this)\n      );\n      this.post(\n        \"/user/playlists/:playlistId\",\n        addVideoToPlaylistHandler.bind(this)\n      );\n      this.delete(\n        \"/user/playlists/:playlistId/:videoId\",\n        removeVideoFromPlaylistHandler.bind(this)\n      );\n\n      // history routes (private)\n      this.get(\"/user/history\", getHistoryVideosHandler.bind(this));\n      this.post(\"/user/history\", addVideoToHistoryHandler.bind(this));\n      this.delete(\n        \"/user/history/:videoId\",\n        removeVideoFromHistoryHandler.bind(this)\n      );\n      this.delete(\"/user/history/all\", clearHistoryHandler.bind(this));\n    },\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { makeServer } from \"./server\";\n\n// Call make Server\nmakeServer();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}